name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build 

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_C_COMPILER=gcc-10

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Run
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: |
        ./day01-twentytwenty $GITHUB_WORKSPACE/day01/input
        ./day02-password-philosophy $GITHUB_WORKSPACE/day02/input
        ./day03-toboggan-trajectory $GITHUB_WORKSPACE/day03/input
        ./day04-passport-processing $GITHUB_WORKSPACE/day04/input
        ./day05-binary-boarding $GITHUB_WORKSPACE/day05/input
        ./day06-custom-customs $GITHUB_WORKSPACE/day06/input
        ./day07-handy-haversacks $GITHUB_WORKSPACE/day07/input
        ./day08-handheld-halting $GITHUB_WORKSPACE/day08/input
        ./day09-encoding-error $GITHUB_WORKSPACE/day09/input 25
        ./day10-adapter-array $GITHUB_WORKSPACE/day10/input

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        ./day11-seating-system $GITHUB_WORKSPACE/day11/input | tail -n2 | diff - $GITHUB_WORKSPACE/day11/expect || exit 1
        ./day12-rain-risk $GITHUB_WORKSPACE/day12/input | tail -n2 | diff - $GITHUB_WORKSPACE/day12/expect || exit 1
        ./day13-shuttle-search $GITHUB_WORKSPACE/day13/input | tail -n2 | diff - $GITHUB_WORKSPACE/day13/expect || exit 1
        ./day14-docking-data $GITHUB_WORKSPACE/day14/input | tail -n2 | diff - $GITHUB_WORKSPACE/day14/expect || exit 1
